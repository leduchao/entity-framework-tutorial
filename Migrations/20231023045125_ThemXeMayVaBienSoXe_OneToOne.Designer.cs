// <auto-generated />
using EnitytFrameworrkTutorial.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EnitytFrameworrkTutorial.Migrations
{
    [DbContext(typeof(WebDbContext))]
    [Migration("20231023045125_ThemXeMayVaBienSoXe_OneToOne")]
    partial class ThemXeMayVaBienSoXe_OneToOne
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BookBorrower", b =>
                {
                    b.Property<int>("BooksBorrowedId")
                        .HasColumnType("int");

                    b.Property<int>("BorrowersId")
                        .HasColumnType("int");

                    b.HasKey("BooksBorrowedId", "BorrowersId");

                    b.HasIndex("BorrowersId");

                    b.ToTable("BookBorrower");
                });

            modelBuilder.Entity("EnitytFrameworrkTutorial.Models.Entities.Author", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("PenName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Authors");
                });

            modelBuilder.Entity("EnitytFrameworrkTutorial.Models.Entities.BienSo", b =>
                {
                    b.Property<int>("MaBienSo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaBienSo"));

                    b.Property<string>("MaHuyen")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MaTinh")
                        .HasColumnType("int");

                    b.Property<int>("SoDinhDanh")
                        .HasColumnType("int");

                    b.HasKey("MaBienSo");

                    b.ToTable("BienSos");
                });

            modelBuilder.Entity("EnitytFrameworrkTutorial.Models.Entities.Book", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AuthorId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.ToTable("Books");
                });

            modelBuilder.Entity("EnitytFrameworrkTutorial.Models.Entities.Borrower", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Borrowers");
                });

            modelBuilder.Entity("EnitytFrameworrkTutorial.Models.Entities.XeMay", b =>
                {
                    b.Property<int>("MaXe")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaXe"));

                    b.Property<int>("MaBienSo")
                        .HasColumnType("int");

                    b.Property<string>("TenXe")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaXe");

                    b.HasIndex("MaBienSo");

                    b.ToTable("XeMays");
                });

            modelBuilder.Entity("BookBorrower", b =>
                {
                    b.HasOne("EnitytFrameworrkTutorial.Models.Entities.Book", null)
                        .WithMany()
                        .HasForeignKey("BooksBorrowedId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EnitytFrameworrkTutorial.Models.Entities.Borrower", null)
                        .WithMany()
                        .HasForeignKey("BorrowersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EnitytFrameworrkTutorial.Models.Entities.Book", b =>
                {
                    b.HasOne("EnitytFrameworrkTutorial.Models.Entities.Author", "Author")
                        .WithMany("Books")
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Author");
                });

            modelBuilder.Entity("EnitytFrameworrkTutorial.Models.Entities.XeMay", b =>
                {
                    b.HasOne("EnitytFrameworrkTutorial.Models.Entities.BienSo", "BienSo")
                        .WithMany()
                        .HasForeignKey("MaBienSo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BienSo");
                });

            modelBuilder.Entity("EnitytFrameworrkTutorial.Models.Entities.Author", b =>
                {
                    b.Navigation("Books");
                });
#pragma warning restore 612, 618
        }
    }
}
