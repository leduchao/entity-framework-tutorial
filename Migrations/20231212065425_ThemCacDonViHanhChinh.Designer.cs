// <auto-generated />
using EnitytFrameworrkTutorial.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EnitytFrameworrkTutorial.Migrations
{
    [DbContext(typeof(WebDbContext))]
    [Migration("20231212065425_ThemCacDonViHanhChinh")]
    partial class ThemCacDonViHanhChinh
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BookBorrower", b =>
                {
                    b.Property<int>("BooksBorrowedId")
                        .HasColumnType("int");

                    b.Property<int>("BorrowersId")
                        .HasColumnType("int");

                    b.HasKey("BooksBorrowedId", "BorrowersId");

                    b.HasIndex("BorrowersId");

                    b.ToTable("BookBorrower");
                });

            modelBuilder.Entity("EnitytFrameworrkTutorial.Models.Entities.Author", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("PenName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Authors");
                });

            modelBuilder.Entity("EnitytFrameworrkTutorial.Models.Entities.Book", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AuthorId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.ToTable("Books");
                });

            modelBuilder.Entity("EnitytFrameworrkTutorial.Models.Entities.Borrower", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Borrowers");
                });

            modelBuilder.Entity("EnitytFrameworrkTutorial.Models.Entities.Huyen", b =>
                {
                    b.Property<int>("MaHuyen")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaHuyen"));

                    b.Property<int>("MaTinh")
                        .HasColumnType("int");

                    b.Property<string>("TenHuyen")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TinhMaTinh")
                        .HasColumnType("int");

                    b.HasKey("MaHuyen");

                    b.HasIndex("TinhMaTinh");

                    b.ToTable("DanhSachHuyen");
                });

            modelBuilder.Entity("EnitytFrameworrkTutorial.Models.Entities.LoaiXe", b =>
                {
                    b.Property<int>("MaLoaiXe")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaLoaiXe"));

                    b.Property<string>("TenLoaiXe")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaLoaiXe");

                    b.ToTable("DanhSachLoaiXe");
                });

            modelBuilder.Entity("EnitytFrameworrkTutorial.Models.Entities.Thon", b =>
                {
                    b.Property<int>("MaThon")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaThon"));

                    b.Property<int>("MaXa")
                        .HasColumnType("int");

                    b.Property<string>("TenThon")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("XaMaXa")
                        .HasColumnType("int");

                    b.HasKey("MaThon");

                    b.HasIndex("XaMaXa");

                    b.ToTable("DanhSachThon");
                });

            modelBuilder.Entity("EnitytFrameworrkTutorial.Models.Entities.Tinh", b =>
                {
                    b.Property<int>("MaTinh")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaTinh"));

                    b.Property<string>("TenTinh")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaTinh");

                    b.ToTable("DanhSachTinh");
                });

            modelBuilder.Entity("EnitytFrameworrkTutorial.Models.Entities.Xa", b =>
                {
                    b.Property<int>("MaXa")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaXa"));

                    b.Property<int>("HuyenMaHuyen")
                        .HasColumnType("int");

                    b.Property<int>("MaHuyen")
                        .HasColumnType("int");

                    b.Property<string>("TenXa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaXa");

                    b.HasIndex("HuyenMaHuyen");

                    b.ToTable("DanhSachXa");
                });

            modelBuilder.Entity("BookBorrower", b =>
                {
                    b.HasOne("EnitytFrameworrkTutorial.Models.Entities.Book", null)
                        .WithMany()
                        .HasForeignKey("BooksBorrowedId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EnitytFrameworrkTutorial.Models.Entities.Borrower", null)
                        .WithMany()
                        .HasForeignKey("BorrowersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EnitytFrameworrkTutorial.Models.Entities.Book", b =>
                {
                    b.HasOne("EnitytFrameworrkTutorial.Models.Entities.Author", "Author")
                        .WithMany("Books")
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Author");
                });

            modelBuilder.Entity("EnitytFrameworrkTutorial.Models.Entities.Huyen", b =>
                {
                    b.HasOne("EnitytFrameworrkTutorial.Models.Entities.Tinh", "Tinh")
                        .WithMany("DanhSachHuyen")
                        .HasForeignKey("TinhMaTinh")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Tinh");
                });

            modelBuilder.Entity("EnitytFrameworrkTutorial.Models.Entities.Thon", b =>
                {
                    b.HasOne("EnitytFrameworrkTutorial.Models.Entities.Xa", "Xa")
                        .WithMany("DanhSachThon")
                        .HasForeignKey("XaMaXa")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Xa");
                });

            modelBuilder.Entity("EnitytFrameworrkTutorial.Models.Entities.Xa", b =>
                {
                    b.HasOne("EnitytFrameworrkTutorial.Models.Entities.Huyen", "Huyen")
                        .WithMany("DanhSachXa")
                        .HasForeignKey("HuyenMaHuyen")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Huyen");
                });

            modelBuilder.Entity("EnitytFrameworrkTutorial.Models.Entities.Author", b =>
                {
                    b.Navigation("Books");
                });

            modelBuilder.Entity("EnitytFrameworrkTutorial.Models.Entities.Huyen", b =>
                {
                    b.Navigation("DanhSachXa");
                });

            modelBuilder.Entity("EnitytFrameworrkTutorial.Models.Entities.Tinh", b =>
                {
                    b.Navigation("DanhSachHuyen");
                });

            modelBuilder.Entity("EnitytFrameworrkTutorial.Models.Entities.Xa", b =>
                {
                    b.Navigation("DanhSachThon");
                });
#pragma warning restore 612, 618
        }
    }
}
